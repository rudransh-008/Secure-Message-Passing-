{"ast":null,"code":"var _jsxFileName = \"/Users/rudranshgupta/Desktop/dappcord_main/src/components/Channels.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Channels = _ref => {\n  let {\n    provider,\n    account,\n    dappcord,\n    channels,\n    currentChannel,\n    setCurrentChannel\n  } = _ref;\n  const channelHandler = async channel => {\n    // Check if user has joined\n    // If they haven't allow them to mint.\n    const hasJoined = await dappcord.hasJoined(channel.id, account);\n    if (hasJoined) {\n      setCurrentChannel(channel);\n    } else {\n      const signer = await provider.getSigner();\n      const transaction = await dappcord.connect(signer).mint(channel.id, {\n        value: channel.cost\n      });\n      await transaction.wait();\n      setCurrentChannel(channel);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channels\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channels__text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text Channels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: channels.map((channel, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => channelHandler(channel),\n          className: currentChannel && currentChannel.id.toString() === channel.id.toString() ? \"active\" : \"\",\n          children: channel.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channels__voice\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Channels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Channel 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Channel 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Channel 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Channels;\nexport default Channels;\nvar _c;\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["Channels","provider","account","dappcord","channels","currentChannel","setCurrentChannel","channelHandler","channel","hasJoined","id","signer","getSigner","transaction","connect","mint","value","cost","wait","map","index","toString","name"],"sources":["/Users/rudranshgupta/Desktop/dappcord_main/src/components/Channels.js"],"sourcesContent":["const Channels = ({ provider, account, dappcord, channels, currentChannel, setCurrentChannel }) => {\r\n  const channelHandler = async (channel) => {\r\n    // Check if user has joined\r\n    // If they haven't allow them to mint.\r\n    const hasJoined = await dappcord.hasJoined(channel.id, account)\r\n\r\n    if (hasJoined) {\r\n      setCurrentChannel(channel)\r\n    } else {\r\n      const signer = await provider.getSigner()\r\n      const transaction = await dappcord.connect(signer).mint(channel.id, { value: channel.cost })\r\n      await transaction.wait()\r\n      setCurrentChannel(channel)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"channels\">\r\n      <div className=\"channels__text\">\r\n        <h2>Text Channels</h2>\r\n\r\n        <ul>\r\n          {channels.map((channel, index) => (\r\n            <li\r\n              onClick={() => channelHandler(channel)} key={index}\r\n              className={currentChannel && currentChannel.id.toString() === channel.id.toString() ? \"active\" : \"\"}>\r\n              {channel.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"channels__voice\">\r\n        <h2>Video Channels</h2>\r\n\r\n        <ul>\r\n          <li>Channel 1</li>\r\n          <li>Channel 2</li>\r\n          <li>Channel 3</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Channels;"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,QAAkF;EAAA,IAAjF;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAkB,CAAC;EAC5F,MAAMC,cAAc,GAAG,MAAOC,OAAO,IAAK;IACxC;IACA;IACA,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACM,SAAS,CAACD,OAAO,CAACE,EAAE,EAAER,OAAO,CAAC;IAE/D,IAAIO,SAAS,EAAE;MACbH,iBAAiB,CAACE,OAAO,CAAC;IAC5B,CAAC,MAAM;MACL,MAAMG,MAAM,GAAG,MAAMV,QAAQ,CAACW,SAAS,EAAE;MACzC,MAAMC,WAAW,GAAG,MAAMV,QAAQ,CAACW,OAAO,CAACH,MAAM,CAAC,CAACI,IAAI,CAACP,OAAO,CAACE,EAAE,EAAE;QAAEM,KAAK,EAAER,OAAO,CAACS;MAAK,CAAC,CAAC;MAC5F,MAAMJ,WAAW,CAACK,IAAI,EAAE;MACxBZ,iBAAiB,CAACE,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAA,UAAI;MAAa;QAAA;QAAA;QAAA;MAAA,QAAK,eAEtB;QAAA,UACGJ,QAAQ,CAACe,GAAG,CAAC,CAACX,OAAO,EAAEY,KAAK,kBAC3B;UACE,OAAO,EAAE,MAAMb,cAAc,CAACC,OAAO,CAAE;UACvC,SAAS,EAAEH,cAAc,IAAIA,cAAc,CAACK,EAAE,CAACW,QAAQ,EAAE,KAAKb,OAAO,CAACE,EAAE,CAACW,QAAQ,EAAE,GAAG,QAAQ,GAAG,EAAG;UAAA,UACnGb,OAAO,CAACc;QAAI,GAFgCF,KAAK;UAAA;UAAA;UAAA;QAAA,QAIrD;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,eAEN;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QAAA,UAAI;MAAc;QAAA;QAAA;QAAA;MAAA,QAAK,eAEvB;QAAA,wBACE;UAAA,UAAI;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB;UAAA,UAAI;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB;UAAA,UAAI;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACf;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KA3CKpB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}